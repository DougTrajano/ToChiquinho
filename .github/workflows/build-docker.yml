name: Build SageMaker Docker Image

on:
  workflow_dispatch:
    inputs:
      aws-region:
        description: AWS region
        required: true
        default: us-east-1
      ecr-repository:
        description: ECR repository name
        required: true
        default: sagemaker-transformers
      pytorch-version:
        description: PyTorch version
        required: true
        default: 1.12.0
      pytorch-processor:
        description: PyTorch processor
        required: true
        default: gpu
      python-version:
        description: Python version
        required: true
        default: py38

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        id: configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.aws-region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Create Amazon ECR repository
        id: create-ecr-repository
        env:
          ECR_REPOSITORY: ${{ github.event.inputs.ecr-repository }}
        run: |
          aws ecr describe-repositories --repository-names $ECR_REPOSITORY --region us-east-1 > /dev/null 2>&1

          if [ $? -ne 0 ]
          then
            aws ecr create-repository --repository-name $ECR_REPOSITORY --region us-east-1 --image-scanning-configuration scanOnPush=true
          fi

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REPOSITORY: ${{ github.event.inputs.ecr-repository }}
          IMAGE_TAG: ${{ github.event.inputs.pytorch-version }}-${{ github.event.inputs.pytorch-processor }}-${{ github.event.inputs.python-version }}
        run: |
          account=$(aws sts get-caller-identity --query Account --output text)
          
          ECR_REGISTRY=$(aws ecr describe-repositories --repository-names $ECR_REPOSITORY --region us-east-1 --query 'repositories[0].repositoryUri' --output text)

          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $ECR_REGISTRY
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG